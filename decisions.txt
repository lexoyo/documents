- load balancing:
  - current: nothing
  - quick fix: rsync + monitoring emails + manual DNS switch
  - MX relay
  - investigate: rsync + haproxy (extra bandwidth costs? extra lag? 98+1+1 DNS round robin?)
  - investigate: use iframes for traffic routing somehow?
- architecture, based on systemd, docker, haproxy, and some bash scripts:
  - docker
  - systemd with @.service templates
  - haproxy
  - scripts/setup.sh, scripts/activate-user.sh
- eventually, look at VOLUMES from Dockerfile to generate the blueprint and the list of which host paths to mount

- website:
  - blue screen from Cami
  - static blog with jekyll

- product:
  - step 1: money + email address
  - super-simple-to-use update by email product:
    - do you have a pseudonym?
    - choose domain name from these 5 options
    - send us a photo and short text
    - links to your silo accounts
  - other edit options from there on:
    - via email/chat/person/voice/... (photo/text update)
    - via ... (html)
    - via ... (blog post)
    - the git repo we should be polling with our cron jobs

- launch phases:
  - hackernews phase -> make hackernews readers enthusiastic, build following
  - crowd-funding phase -> appeal to people who gave money to diaspora, mailpile, sandstorm, ind.ie, etc.
  - live phase -> compete with "normal" hosting providers on share/connect/store, and start conquering niche markets (biggest first)

# five focus areas:
- technical
  - infrastructure
  - applications
- communication
  - website
  - talking to relevant people
  - crowdfunding

# Initial income

- grants (incl. initial 6000 EUR)
- redundancy-less wordpress for real customers (just 10 new customers per month)
- crowdfunding: basic MVP or redundancy-less Wordpress + T-shirt + sticker
- bountysource (only claimable if you first become an IndieHoster):
  - 100 EUR / LAMP product
  - 1000 EUR any other stack

# Join the IndieWeb campaign
* 50 EUR/year for either WordPress-based or Known-based product
* We aim to get 400x50=20,000 EUR, and set all these new customers up in one batch, in January. That way some money will be left over for R&D.


# SSL

* by default, we put people into batches of 50, on multi-domain certs with domain.com and stats.domain.com for each one.
* in a year in which a user migrates at least once, we generate their simple certificate, and host them on that. In the last month before this certificate expires, if the hoster has at least two other new certs to obtain, it makes sense to batch them together again.
* This way we spend 0.50 USD per year on customers that don't migrate, and 9 USD per year on customers that do. The yearly product price should be based on the 9 USD, and we make more profit on users in years in which they don't migrate. An extra incentive to keep them happy! :)
